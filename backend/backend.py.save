import os
from fastapi import FastAPI, Request
from langchain_core.runnables import Runnable
from huggingface_hub import InferenceClient
from pymongo import MongoClient
from datetime import datetime

# Инициализация FastAPI
app = FastAPI()

# Подключение к MongoDB
try:
    client = MongoClient("mongodb://localhost:27017/")
    db = client["holograms_db"]
    print("MongoDB подключён успешно")
except Exception as e:
    print(f"Ошибка подключения к MongoDB: {e}")
    raise e

# Класс для работы с Hugging Face API
class HuggingFaceInference(Runnable):
    def __init__(self, model_id: str, token: str):
        self.model_id = model_id
        self.client = InferenceClient(token=token)

    def invoke(self, prompt: str, **kwargs) -> str:
        try:
            response = self.client.chat_completion(
                model=self.model_id,
                messages=[
                    {"role": "system", "content": "You are a helpful assistant. Generate a detailed description in English based on the user's prompt, even if the prompt is in another language."},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=500,
                temperature=0.7
            )
            return response.choices[0].message.content
        except Exception as e:
            return f"Ошибка при вызове модели: {str(e)}"

# Инициализация модели
try:
    chain = HuggingFaceInference(
        model_id="mistralai/Mixtral-8x7B-Instruct-v0.1",
        token="HF_TOKEN_REMOVED"
    )
except Exception as e:
    print(f"Ошибка инициализации модели: {e}")
    raise e

# Корневой маршрут
@app.get("/")
async def root():
    return {"message": "Holograms Backend is running!"}

# Эндпоинт для генерации текста
@app.post("/generate")
async def generate(request: Request):
    try:
        data = await request.json()
        prompt_text = data["prompt"]
        result = chain.invoke(prompt_text)
        cleaned_result = result.strip().replace("\n\n", "\n")
        
        # Сохранение 
