---
description: 
globs: *.js, *.py, *.html, *.css, Jenkinsfile
alwaysApply: false
---
Project Rules (v1.1) - Holograms Media
Роль и цель
Роль: AI-ассистент для разработки open-source платформы 3D-аудиовизуализации с управлением жестами и голосом.
Цель: Стабилизация бэкенда, рефакторинг фронтенда на модульную структуру (JS), реализация базового UI/UX для чата и панелей, подготовка к миграции на Hugging Face Spaces.
Технологический стек
Фронтенд: HTML, CSS (Flexbox, Grid, CSS Variables, clamp()), JavaScript (ES6+ Модули, Three.js r128, MediaPipe Hands ~0.4, Axios). Переход от монолитного script.js к модульной структуре в frontend/js/.
Бэкенд: Python 3.12, FastAPI, MongoDB (Motor), LangChain (ChatMistralAI).
Инфра: Ubuntu 24.04 VPS (Beget - текущая), Git. Планируется: Переход на Hugging Face Spaces (Docker для бэкенда, Static HTML для фронтенда), GitHub Actions для CI/CD (замена Jenkins), MongoDB Atlas (для HF).
Текущее состояние (Май 2025)
Бэкенд: Запускается стабильно (uvicorn без --reload после устранения конфликтов PM2/портов), подключение к MongoDB при старте успешно (/health отвечает OK), эндпоинт /chat работает и отвечает через Mistral AI. Проблема: Операции чтения/записи в MongoDB (например, в /branches/* и при сохранении чата в /chat) завершаются ошибкой аутентификации (pymongo.errors.OperationFailure: Command find/insert requires authentication). Эндпоинт /tria/save_logs требует тестирования после исправления отступов.
Фронтенд: Базовый HTML (index.html) и CSS (style.css со стандартизированными размерами) есть. Старый script.js обеспечивает частичную функциональность (3D-сцена видна, чат отправляет/получает сообщения). Проблема: Новая модульная структура JS (frontend/js/) не работает - браузер выдает ошибки 404 для большинства модулей, так как они еще не созданы/наполнены кодом. Создан модуль rightPanelManager.js (Промпт #52), но не интегрирован. Скроллинг в чате не работает.
Инфра: Jenkins установлен, но нестабилен и не используется активно. PM2 остановлен.
Правила работы
Используй профессиональный русский язык для комментариев в коде и ответов.
При создании/изменении JS-модулей:
Следуй структуре в frontend/js/ (создавай подпапки components, core, utils, panels и т.д.).
Пиши чистый, читаемый код ES6+, используй export для нужных функций/классов.
Избегай прямого использования глобальных переменных из script.js; передавай зависимости или используй временные заглушки (window.*) с комментарием.
Для бэкенда (backend.py):
Сфокусируйся на решении проблемы аутентификации MongoDB при операциях.
Используй асинхронные функции (async def).
Добавляй логирование для диагностики.
После внесения изменений предлагай шаги для тестирования:
Для бэкенда: Перезапуск Uvicorn без --reload (python -m uvicorn backend:app --host 0.0.0.0 --port 3000), проверка /health, проверка конкретного эндпоинта через curl или UI.
Для фронтенда: Полная перезагрузка страницы (Ctrl+Shift+R), проверка консоли F12 на ошибки, проверка работы конкретного UI-элемента.
Приоритетные задачи (Текущий План)
(Бэкенд) Решить проблему аутентификации MongoDB при операциях чтения/записи (ошибка OperationFailure: Command ... requires authentication).
(Фронтенд) Устранить ошибки 404 для JS модулей путем последовательного создания модулей и переноса логики из script.js:
Промпт №53: Создать frontend/js/components/chatMessages.js (отображение сообщений).
Промпт №54: Создать frontend/js/audio/speechInput.js (базовый голосовой ввод).
Промпт №55: Интегрировать созданные модули (rightPanelManager, chatMessages, speechInput) в main.js (или переименованном script.js), удалить/закомментировать старый код и неиспользуемые вызовы. Цель: Заставить модульную структуру работать.
(UI) Исправить неработающий скроллинг в окне чата (#chatMessages).
(Бэкенд) Протестировать эндпоинт /tria/save_logs после исправления отступов.