# .github/workflows/firebase-deploy.yml

name: Build, Test and Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
  pull_request: # Также запускаем проверки на Pull Request, но без деплоя
    branches:
      - main

jobs:
  build_and_deploy:
    name: Build, Test and Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Шаг 1: Настройка Node.js ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Используем актуальную LTS-версию Node.js
          cache: 'npm'       # Кешируем зависимости для ускорения будущих сборок
          cache-dependency-path: frontend/package-lock.json

      # --- Шаг 2: Установка зависимостей Frontend ---
      - name: Install Frontend Dependencies
        run: npm --prefix frontend install --legacy-peer-deps

      # --- Шаг 3: Линтинг (проверка качества кода) ---
      # (Раскомментируйте, когда настроите ESLint в package.json)
      # - name: Run Linter (ESLint)
      #   run: npm --prefix frontend run lint

      # --- Шаг 4: Сборка проекта с помощью Vite ---
      - name: Build Frontend Project
        run: npm --prefix frontend run build
        
      # --- Шаг 5: Настройка аутентификации Google для деплоя ---
      - name: Set up Google Cloud Auth
        # Этот шаг выполняется только для ветки main, а не для PR
        if: github.ref == 'refs/heads/main'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'

      # --- Шаг 6: Установка Firebase Tools ---
      - name: Install Firebase Tools
        if: github.ref == 'refs/heads/main'
        run: npm install -g firebase-tools

      # --- Шаг 7: Деплой на Firebase Hosting ---
      - name: Deploy to Hosting
        if: github.ref == 'refs/heads/main'
        run: firebase deploy --only hosting
