name: üöÄ Preview Environment Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]

concurrency:
  group: preview-${{ github.event.number }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  # Job 1: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç–∫–∞–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  manage_database_branch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    outputs:
      database_url: ${{ steps.create-branch.outputs.db_url }}
      branch_id: ${{ steps.create-branch.outputs.branch_id }}
      neon_data_api_url: ${{ steps.neon-config.outputs.data_api_url }} # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —ç—Ç–æ output –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–ª–∏ –Ω—É–∂–µ–Ω

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      # –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –ë–î –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ PR
      - name: üåø Create Neon Database Branch
        if: github.event.action != 'closed'
        id: create-branch # ID –Ω—É–∂–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ outputs
        uses: neondatabase/create-branch-action@v6 # –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ v6
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}
          api_key: ${{ secrets.NEON_API_KEY }}
          username: ${{ vars.NEON_USERNAME || 'neondb_owner' }}

      # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Neon Data API URL
      # –≠—Ç–æ—Ç —à–∞–≥ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç URL –¥–ª—è Neon Data API, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç db_url
      # db_url - —ç—Ç–æ connection string –¥–ª—è –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î (psql)
      # neon_data_api_url - —ç—Ç–æ HTTP endpoint –¥–ª—è PostgREST-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–≥–æ API
      - name: üîß Configure Neon Data API URL
        if: github.event.action != 'closed'
        id: neon-config # ID –Ω—É–∂–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ outputs
        run: |
          # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è Data API –Ω–∞ –æ—Å–Ω–æ–≤–µ ID –ø—Ä–æ–µ–∫—Ç–∞.
          # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Neon Data API URL - https://{endpoint_id}.{region_id}.neon.tech/sql/v1
          # –û–¥–Ω–∞–∫–æ, –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Neon –¥–ª—è create-branch-action db_url —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç endpoint_id.
          # –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏–∑–≤–ª–µ—á—å –µ–≥–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–π —Ñ–æ—Ä–º–∞—Ç, –µ—Å–ª–∏ project_id —ç—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ.
          # –î–ª—è –±–æ–ª—å—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ `create-branch` –Ω–µ –≤—ã–¥–∞–µ—Ç Data API URL, –µ–≥–æ –Ω—É–∂–Ω–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫—É—Ä–∞—Ç–Ω–æ.
          # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ vars.NEON_PROJECT_ID —ç—Ç–æ ID –ø—Ä–æ–µ–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `silent-truth-123456`)
          # –∏ –Ω–∞–º –Ω—É–∂–µ–Ω –±–∞–∑–æ–≤—ã–π URL –¥–ª—è Data API, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ã—á–Ω–æ –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç –∏–º—è –≤–µ—Ç–∫–∏ –≤ —Å–∞–º URL,
          # –∞ –≤–µ—Ç–∫–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–ª–∏ JWT.
          # –í –∑–∞–¥–∞–Ω–∏–∏ –±—ã–ª –ø—Ä–∏–º–µ—Ä: https://your-project.neon.tech/data-api
          # –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∏–ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π –¥–æ–º–µ–Ω.
          # –ë–æ–ª–µ–µ –æ–±—â–∏–π —Ñ–æ—Ä–º–∞—Ç: https://ep-project-branch.neon.tech/sql/v1
          # –î–ª—è preview –≤–µ—Ç–æ–∫, Data API URL –æ–±—ã—á–Ω–æ —Ç–æ—Ç –∂–µ, —á—Ç–æ –∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π, –Ω–æ —Å –¥—Ä—É–≥–∏–º JWT/—Ä–æ–ª—å—é.
          # –ù–∞–º –Ω—É–∂–µ–Ω URL, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥.
          # –í –∑–∞–¥–∞–Ω–∏–∏ —É–∫–∞–∑–∞–Ω —Ñ–æ—Ä–º–∞—Ç https://${{ vars.NEON_PROJECT_ID }}.neon.tech/data-api
          # –ë—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ, –Ω–æ —Å—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –ª–∏ –æ–Ω –¥–ª—è Neon.
          # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å –¥–ª—è Data API - /sql/v1
          DATA_API_URL="https://ep-${{ vars.NEON_PROJECT_ID }}.neon.tech/sql/v1" # –ë–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
          # –ò–ª–∏ –µ—Å–ª–∏ vars.NEON_PROJECT_ID —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–Ω—ã–π —Ö–æ—Å—Ç –¥–ª—è API:
          # DATA_API_URL="${{ vars.NEON_PROJECT_ID_OR_API_HOST }}/sql/v1"
          # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –∏–∑ Perplexity:
          # DATA_API_URL="https://${{ vars.NEON_PROJECT_ID }}.neon.tech/data-api" # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –≤ –∑–∞–¥–∞–Ω–∏–∏, –Ω–æ —Å —Å–æ–º–Ω–µ–Ω–∏–µ–º
          # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: Perplexity –¥–∞–ª "https://${{ vars.NEON_PROJECT_ID }}.neon.tech/data-api"
          # –≠—Ç–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –∫–∞—Å—Ç–æ–º–Ω—ã–π Data Proxy URL. –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫, —Ç–æ vars.NEON_PROJECT_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —ç—Ç–∏–º URL –±–µ–∑ /sql/v1.
          # –î–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç–∏, –ª—É—á—à–µ –µ—Å–ª–∏ NEON_DATA_API_BASE_URL –±—É–¥–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.
          # –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –≤ –∑–∞–¥–∞–Ω–∏–∏ –æ—Ç Perplexity:
          DATA_API_URL_BASE="https://${{ vars.NEON_PROJECT_ID }}.neon.tech" # –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Project Endpoint Host
          # –ö–æ–Ω–µ—á–Ω—ã–π Data API URL –¥–ª—è PostgREST –æ–±—ã—á–Ω–æ /
          # –î–ª—è HTTP API /sql/v1, –¥–ª—è PostgREST /rest/v1 (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
          # –£—á–∏—Ç—ã–≤–∞—è, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è @supabase/postgrest-js, –Ω—É–∂–µ–Ω PostgREST endpoint.
          # PostgREST endpoint –æ–±—ã—á–Ω–æ: https://<project_endpoint_host>/rest/v1
          # –ï—Å–ª–∏ NEON_PROJECT_ID —ç—Ç–æ endpoint_id (–Ω–∞–ø—Ä–∏–º–µ—Ä, ep-cool-sound-a5123456)
          # —Ç–æ DATA_API_URL="https://ep-${{ vars.NEON_PROJECT_ID }}.neon.tech/rest/v1"
          # –£—Ç–æ—á–Ω—è–µ–º —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–¥–∞–Ω–∏—é, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç VITE_NEON_DATA_API_URL –¥–ª—è postgrest-js.
          # –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å URL –≤–∏–¥–∞ https://<endpoint_id>.neon.tech
          # –°–∞–º PostgrestClient –¥–æ–±–∞–≤–ª—è–µ—Ç /rest/v1 –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –∏–Ω–æ–µ.
          # –¢–∞–∫ —á—Ç–æ vars.NEON_PROJECT_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–æ—Å—Ç–æ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞.
          # –î–ª—è create-branch.outputs.db_url: postgresql://user:pass@host:port/db
          # –ù–∞–º –Ω—É–∂–Ω–æ –∏–∑–≤–ª–µ—á—å host –∏–∑ db_url –∏–ª–∏ –∏–º–µ—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö–æ—Å—Ç–∞ PostgREST.
          # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ vars.NEON_PROJECT_ID - —ç—Ç–æ –∏ –µ—Å—Ç—å —Ö–æ—Å—Ç –¥–ª—è Data API.
          # –ò —á—Ç–æ PostgrestClient —Å–∞–º –¥–æ–±–∞–≤–∏—Ç /rest/v1.
          # –ù–æ –≤ –∑–∞–¥–∞–Ω–∏–∏ –±—ã–ª–æ `https://your-project.neon.tech/data-api` –¥–ª—è VITE_NEON_DATA_API_URL.
          # –≠—Ç–æ –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π PostgREST URL.
          # –ï—Å–ª–∏ `vars.NEON_PROJECT_ID` —ç—Ç–æ `your-project` –∏–∑ –ø—Ä–∏–º–µ—Ä–∞, —Ç–æ:
          DATA_API_URL="https://${{ vars.NEON_PROJECT_ID }}.neon.tech" # –≠—Ç–æ –±—É–¥–µ—Ç –±–∞–∑–æ–π –¥–ª—è PostgrestClient
          echo "data_api_url=$DATA_API_URL" >> $GITHUB_OUTPUT
          echo "::notice::Neon Data API Base URL for PostgrestClient: $DATA_API_URL"

      # –£–¥–∞–ª–µ–Ω–∏–µ –≤–µ—Ç–∫–∏ –ë–î –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ PR
      - name: üóëÔ∏è Delete Neon Database Branch
        if: github.event.action == 'closed'
        uses: neondatabase/delete-branch-action@v3 # –ò—Å–ø–æ–ª—å–∑—É–µ–º v3 –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}
          api_key: ${{ secrets.NEON_API_KEY }}
    permissions:
      contents: read

  # Job 2: –î–µ–ø–ª–æ–π –±—ç–∫–µ–Ω–¥–∞ –Ω–∞ Koyeb
  deploy_backend_preview:
    runs-on: ubuntu-latest
    needs: manage_database_branch

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Install and Configure Koyeb CLI
        uses: koyeb-community/install-koyeb-cli@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      - name: üöÄ Deploy Backend to Koyeb
        id: koyeb-deploy # ID –Ω—É–∂–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ outputs
        uses: koyeb/action-git-deploy@v1 # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π action
        with:
          git-branch: ${{ github.head_ref }} # –î–µ–ø–ª–æ–∏–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É PR
          app-name: holograms-pr-${{ github.event.number }} # –ò–º—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Koyeb
          service-name: backend-pr-${{ github.event.number }} # –ò–º—è —Å–µ—Ä–≤–∏—Å–∞
          service-type: web # –¢–∏–ø —Å–µ—Ä–≤–∏—Å–∞
          service-dockerfile: ./Dockerfile # –ü—É—Ç—å –∫ Dockerfile –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
          service-ports: "8000:http" # –ú–∞–ø–ø–∏–Ω–≥ –ø–æ—Ä—Ç–æ–≤
          service-routes: "/:8000" # –†–æ—É—Ç–∏–Ω–≥
          service-env: | # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
            DATABASE_URL=${{ needs.manage_database_branch.outputs.database_url }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} # –ü—Ä–∏–º–µ—Ä —Å–µ–∫—Ä–µ—Ç–∞ –¥–ª—è Google AI
            ENVIRONMENT=preview
            # CORS_ORIGINS –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ URL —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ Firebase Preview Channel
            # –ú—ã –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞–µ–º –µ–≥–æ, –Ω–æ –º–æ–∂–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω.
            # Firebase Preview Channel URL: https://<project_id>--pr-${{ github.event.number }}-<channel_hash>.web.app
            # –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è, –º–æ–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –±–æ–ª–µ–µ —à–∏—Ä–æ–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è —Ñ—Ä–æ–Ω—Ç–∞.
            # –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º —Ç–∞–∫, –∫–∞–∫ –±—ã–ª–æ –≤ –∑–∞–¥–∞–Ω–∏–∏, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ Firebase URL –±—É–¥–µ—Ç —Ç–∞–∫–∏–º.
            CORS_ORIGINS=https://holograms-pr-${{ github.event.number }}--${{ vars.FIREBASE_PROJECT_ID }}.web.app,https://pr-${{ github.event.number }}--${{ vars.FIREBASE_PROJECT_ID }}.web.app,https://${{ vars.FIREBASE_PROJECT_ID }}--pr-${{ github.event.number }}.web.app
            # –î–æ–±–∞–≤–∏–º –µ—â–µ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ —Ö—ç—à–∞, –µ—Å–ª–∏ Firebase —Ç–∞–∫ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –¥–ª—è PR
            # –õ—É—á—à–µ –≤—Å–µ–≥–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π URL —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏–∑ job'–∞ deploy_frontend_preview,
            # –Ω–æ —ç—Ç–æ —Å–æ–∑–¥–∞—Å—Ç —Ü–∏–∫–ª–∏—á–µ—Å–∫—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∏–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç –µ—â–µ –æ–¥–Ω–æ–≥–æ job'–∞.
            # –î–ª—è MVP, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å '*' –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∑–∂–µ.
            # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω –∏–∑ –∑–∞–¥–∞–Ω–∏—è, –Ω–æ —Å FIREBASE_PROJECT_ID.
            # –í –∑–∞–¥–∞–Ω–∏–∏ –±—ã–ª–æ: CORS_ORIGINS=https://holograms-pr-${{ github.event.number }}--holograms-media.web.app
            # –≠—Ç–æ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç, —á—Ç–æ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞ Firebase "holograms-media". –ó–∞–º–µ–Ω–∏–º –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é.
            PYTHONUNBUFFERED=1 # –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ–≤ Python –≤ Koyeb
            PYTHONDONTWRITEBYTECODE=1
            PORT=8000 # –ü–æ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–ª—É—à–∞–µ—Ç FastAPI –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            GOOGLE_APPLICATION_CREDENTIALS_JSON=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }} # –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è JSON —Å–µ–∫—Ä–µ—Ç–∞ –¥–ª—è ADC
            # –î–æ–±–∞–≤–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è Neon Data API URL, –µ—Å–ª–∏ –±—ç–∫–µ–Ω–¥ —Ç–æ–∂–µ –±—É–¥–µ—Ç –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            # NEON_DATA_API_URL=${{ needs.manage_database_branch.outputs.neon_data_api_url }}
            # MISTRAL_API_KEY=${{ secrets.MISTRAL_API_KEY }} # –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Mistral

      - name: üìã Output Backend URL
        run: |
          echo "Backend deployed to: ${{ steps.koyeb-deploy.outputs.app_url }}"
          echo "::notice::Backend URL: ${{ steps.koyeb-deploy.outputs.app_url }}"

  # Job 3: –î–µ–ø–ª–æ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–∞ Firebase Hosting
  deploy_frontend_preview:
    runs-on: ubuntu-latest
    needs: [manage_database_branch, deploy_backend_preview] # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ë–î –∏ –¥–µ–ø–ª–æ—è –±—ç–∫–µ–Ω–¥–∞
    if: github.event.action != 'closed'
    outputs:
      frontend_url: ${{ steps.firebase-deploy.outputs.details_url }} # URL –ø—Ä–µ–≤—å—é-–∫–∞–Ω–∞–ª–∞

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # –£–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Ä—Å–∏—é Node.js
          cache: 'npm'
          # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ lock-—Ñ–∞–π–ª—É –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
          cache-dependency-path: package-lock.json # –ò–ª–∏ frontend/package-lock.json –µ—Å–ª–∏ –æ–Ω —Ç–∞–º

      - name: üì¶ Install Frontend Dependencies
        # working-directory: ./frontend # –£–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ package.json —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Ç–∞–º
        run: npm ci # –ò—Å–ø–æ–ª—å–∑—É–µ–º ci –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑ lock-—Ñ–∞–π–ª–∞

      - name: üèóÔ∏è Build Frontend with Preview Environment Variables
        # working-directory: ./frontend # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ
        env:
          VITE_BACKEND_URL: ${{ needs.deploy_backend_preview.outputs.backend_url }}
          VITE_NEON_DATA_API_URL: ${{ needs.manage_database_branch.outputs.neon_data_api_url }}
          VITE_ENVIRONMENT: preview
          VITE_PR_NUMBER: ${{ github.event.number }}
          # –î–æ–±–∞–≤–∏–º Firebase config –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ –Ω—É–∂–Ω—ã –≤–æ –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY_FRONTEND }} # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–µ–∫—Ä–µ—Ç –¥–ª—è —Ñ—Ä–æ–Ω—Ç–∞
          VITE_FIREBASE_AUTH_DOMAIN: ${{ vars.FIREBASE_AUTH_DOMAIN_FRONTEND }}
          VITE_FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }} # –û–±—â–∏–π ID –ø—Ä–æ–µ–∫—Ç–∞
          # ... –¥—Ä—É–≥–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Firebase, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã
        run: npm run build # –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ –∫–æ—Ä–Ω–µ–≤–æ–º package.json –∏ –∑–∞–ø—É—Å–∫–∞—Ç—å vite build –¥–ª—è frontend

      - name: üî• Deploy to Firebase Hosting Preview Channel
        id: firebase-deploy # ID –Ω—É–∂–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ outputs
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }} # JSON –∫–ª—é—á —Å–µ—Ä–≤–∏—Å-–∞–∫–∫–∞—É–Ω—Ç–∞ Firebase
          projectId: ${{ vars.FIREBASE_PROJECT_ID }} # ID –ø—Ä–æ–µ–∫—Ç–∞ Firebase
          channelId: pr-${{ github.event.number }} # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª —Å –∏–º–µ–Ω–µ–º pr-<–Ω–æ–º–µ—Ä_PR>
          entryPoint: ./dist # –£–∫–∞–∑—ã–≤–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–±–æ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (Vite –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–ª–∞–¥–µ—Ç –≤ /dist)
                              # –ï—Å–ª–∏ vite.config.js –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ frontend/dist, —Ç–æ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –µ–≥–æ.
                              # –í –∑–∞–¥–∞–Ω–∏–∏ –±—ã–ª–æ outDir: '../dist', –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –∫–æ—Ä–µ–Ω—å/dist
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks # –í–∫–ª—é—á–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –¥–ª—è –ª—É—á—à–µ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

  # Job 4: –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–≤—å—é-–æ–∫—Ä—É–∂–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ PR
  cleanup_preview_environments:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    needs: [manage_database_branch] # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–∂–¥–∞—Ç—å—Å—è manage_database_branch, —Ç.–∫. –æ–Ω —Ç–æ–∂–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ closed

    steps:
      - name: üõ†Ô∏è Install and Configure Koyeb CLI
        uses: koyeb-community/install-koyeb-cli@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      - name: üóëÔ∏è Delete Koyeb Preview App
        run: |
          APP_NAME="holograms-pr-${{ github.event.number }}"
          if koyeb app get $APP_NAME --output json | grep -q "\"name\":\"$APP_NAME\""; then
            echo "Deleting Koyeb app: $APP_NAME"
            koyeb app delete $APP_NAME --force
          else
            echo "Koyeb app $APP_NAME not found, skipping deletion"
          fi

      - name: üî• Delete Firebase Hosting Preview Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ vars.FIREBASE_PROJECT_ID }}
          channelId: pr-${{ github.event.number }}
          expires: 1d # –ö–∞–Ω–∞–ª –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 1 –¥–µ–Ω—å (–∏–ª–∏ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å—Ä–∞–∑—É)
                      # –î–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Firebase CLI –∫–æ–º–∞–Ω–¥—É –≤ run —à–∞–≥–µ,
                      # –Ω–æ action-hosting-deploy –Ω–µ –∏–º–µ–µ—Ç –æ–ø—Ü–∏–∏ "delete channel".
                      # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ expires: 0s –∏–ª–∏ 1s –º–æ–∂–µ—Ç —Å—Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ.
                      # –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º firebase-tools –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:
                      # - name: Setup Firebase Tools
                      #   uses: FirebaseExtended/setup-firebase@v0
                      # - name: Delete Preview Channel
                      #   run: firebase hosting:channel:delete pr-${{ github.event.number }} --force --project ${{ vars.FIREBASE_PROJECT_ID }}
                      # –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º expires: 1d –∫–∞–∫ –≤ –∑–∞–¥–∞–Ω–∏–∏.

  # Job 5: –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –ø—Ä–µ–≤—å—é-–æ–∫—Ä—É–∂–µ–Ω–∏—è
  post_preview_urls:
    runs-on: ubuntu-latest
    needs: [deploy_backend_preview, deploy_frontend_preview, manage_database_branch] # –î–æ–±–∞–≤–∏–º manage_database_branch –¥–ª—è branch_id
    if: github.event.action != 'closed' && success() # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —à–∞–≥–∏ —É—Å–ø–µ—à–Ω—ã

    steps:
      - name: üí¨ Post Preview URLs to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const frontendUrl = '${{ needs.deploy_frontend_preview.outputs.frontend_url }}';
            const backendUrl = '${{ needs.deploy_backend_preview.outputs.backend_url }}';
            // const dbBranchId = '${{ needs.manage_database_branch.outputs.branch_id }}'; // ID –≤–µ—Ç–∫–∏ Neon
            const dbBranchName = 'preview/pr-${{ github.event.number }}'; // –ò–º—è –≤–µ—Ç–∫–∏ Neon

            const body = `## üöÄ Preview Environment Ready!

            ### üåê URLs:
            - **Frontend:** ${frontendUrl}
            - **Backend API:** ${backendUrl}
            - **API Docs (FastAPI):** ${backendUrl}/docs

            ### üóÑÔ∏è Database (Neon):
            - **Branch Name:** \`${dbBranchName}\`
            - **Connection:** Uses isolated preview branch.
            - **Data API:** Configured for frontend via VITE_NEON_DATA_API_URL.

            ### üß™ Testing:
            This preview environment uses an isolated copy of the production database structure (schema applied, data may be empty or seeded if configured).
            Feel free to test any CRUD operations.

            ### üìä Monitoring:
            - Backend logs: Available in Koyeb dashboard for app \`holograms-pr-${{ github.event.number }}\`
            - Frontend: Check browser console and Firebase Hosting dashboard for channel \`pr-${{ github.event.number }}\`

            ---
            üí° **Tip:** This comment will be updated if you push new commits to this PR.`;

            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botCommentIdentifier = '<!-- GITHUB_PREVIEW_BOT_COMMENT -->';
            const fullBody = botCommentIdentifier + '\\n\\n' + body;

            const existingComment = comments.data.find(comment =>
              comment.user.login === 'github-actions[bot]' && comment.body.includes(botCommentIdentifier)
            );

            if (existingComment) {
              // Update existing comment
              console.log(`Updating existing comment ID: ${existingComment.id}`);
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: fullBody
              });
            } else {
              // Create new comment
              console.log('Creating new comment for preview URLs.');
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: fullBody
              });
            }
